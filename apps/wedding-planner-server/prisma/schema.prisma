datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Vendor {
  contactEmail String?
  createdAt    DateTime               @default(now())
  id           String                 @id @default(cuid())
  name         String?
  serviceType  EnumVendorServiceType?
  updatedAt    DateTime               @updatedAt
  user         User?                  @relation(fields: [userId], references: [id])
  userId       String?
}

model Task {
  createdAt   DateTime        @default(now())
  description String?
  dueDate     DateTime?
  id          String          @id @default(cuid())
  name        String?
  status      EnumTaskStatus?
  updatedAt   DateTime        @updatedAt
  user        User?           @relation(fields: [userId], references: [id])
  userId      String?
}

model Event {
  createdAt   DateTime  @default(now())
  date        DateTime?
  description String?
  id          String    @id @default(cuid())
  location    String?
  name        String?
  updatedAt   DateTime  @updatedAt
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

model Budget {
  allocatedBudget Float?
  createdAt       DateTime @default(now())
  id              String   @id @default(cuid())
  remainingBudget Float?
  totalBudget     Float?
  updatedAt       DateTime @updatedAt
  user            User?    @relation(fields: [userId], references: [id])
  userId          String?
}

model User {
  budgets   Budget[]
  createdAt DateTime @default(now())
  email     String?  @unique
  events    Event[]
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  tasks     Task[]
  updatedAt DateTime @updatedAt
  username  String   @unique
  vendors   Vendor[]
}

enum EnumVendorServiceType {
  Option1
}

enum EnumTaskStatus {
  Option1
}
